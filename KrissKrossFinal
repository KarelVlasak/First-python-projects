import random
global board
board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
def display_board(board):
    print('---------')
    print('   I   I   ')
    print(f' {board[7]} I {board[8]} I {board[9]} ')
    print('   I   I   ')
    print('---------')
    print('   I   I   ')
    print(f' {board[4]} I {board[5]} I {board[6]} ')
    print('   I   I   ')
    print('---------')
    print('   I   I   ')
    print(f' {board[1]} I {board[2]} I {board[3]} ')
    print('   I   I   ')

print(display_board(board))

def player_input():
    global marker
    marker = 'spatne'
   
    while marker not in ['X', 'O']:
        marker = input('Vyber si svuj marker - X nebo O: ')
        if marker not in ['X', 'O', 'x', 'o']:
            print(f'{marker} neni zvolen spravne, zkus to znovu.')
        else:
            marker = marker.upper()
            print(f'vybral sis {marker} jako svuj marker.')
           
    return marker

def pick_position(board,marker):
    display_board(board)
    global pozice
    pozice = 'spatne'
   
    while pozice not in range(1,10):
        pozice = input(f'Vyber pozici pro {marker} (1-9):  ')
        
       
        if pozice.isdigit() == False:
            print(f'{pozice} neni cislice, zkuste to znovu')
            pozice = 'spatne'
        
        pozice = int(pozice)
       
        if pozice not in range(1,10):
            print(f'{pozice} se nepohybuje v danem rozmezi, zkuste to znovu')
            pozice = 'spatne'
        else:
            return pozice
            
    
   
def krisskross(board, marker):
    return ((board[7] == marker and board[8] == marker and board[9] == marker) or # across the top
    (board[4] == marker and board[5] == marker and board[6] == marker) or # across the middle
    (board[1] == marker and board[2] == marker and board[3] == marker) or # across the bottom
    (board[7] == marker and board[4] == marker and board[1] == marker) or # down the middle
    (board[8] == marker and board[5] == marker and board[2] == marker) or # down the middle
    (board[9] == marker and board[6] == marker and board[3] == marker) or # down the right side
    (board[7] == marker and board[5] == marker and board[3] == marker) or # diagonal
    (board[9] == marker and board[5] == marker and board[1] == marker)) # diagonal
 
 
def space_check(board, pozice):
    return board[pozice].isalpha() 
    
def full_board(board):
    filled = 0
    for num in board:
        if num == 'X' or num == 'O':
            filled += 1
    holes_to_fill = 9 - filled    
    print(f'There are {holes_to_fill} places to fill.')
    return filled < 9
   
def first():
    nahoda = random.randint(1,2)
    print(f'Zacina hrac cislo {nahoda}')
    
def replay(znovu=''):
    answer = 'spatne'
    
    while answer.upper() not in ['Y', 'N']:
        answer = input(f'Do you want to play {znovu}? type "Y" or "N": ')
        if answer.upper() == 'Y':
            board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
            znova = True
        elif answer.upper() == 'N':
            znova = False
            break
    return znova
    
def assign_pozice(pozice, marker, board):
    board[pozice] = marker
    return board
    
    
    

print('Welcome to TicTacToe!')
while replay() == True:
    first()
    player_input()
    
    while krisskross(board,marker) == False:
        
        if pick_position(board,marker) in range(1,10):
            space_check(board, pozice)
            if space_check(board,pozice) == False:
                assign_pozice(pozice, marker, board)
                if krisskross(board, marker) == True:
                    display_board(board)
                    
                    
                    print('Máme výherce!!! Gratulace!')
                    replay('again')
                    board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
                    break
                
                if marker == 'X':
                    marker = 'O'
                else:
                    marker = 'X'
            else: 
                print('Pozice je obsazená, zkuste znovu')
        if full_board(board) == False:
            print('Plocha je plná, remíza!')
            display_board(board)
            replay('again')
            board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
            break
        else:
            continue
        
        
